# Stage 1: Build
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install dependencies for node-gyp and other build tools
RUN apk add --no-cache python3 make g++ git

# Install dependencies first (caching layer)
COPY package*.json ./
COPY prisma ./prisma/

# Install dependencies
RUN npm ci

# Copy source
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Build application
RUN npm run build

# Stage 2: Production
FROM node:18-alpine AS runner

# Install production dependencies
RUN apk add --no-cache tini

# Create app directory
WORKDIR /app

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 -G nodejs

# Set environment variables
ENV NODE_ENV=production \
    PORT=3000 \
    TINI_SUBREAPER=true

# Copy built assets from builder
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/package*.json ./
COPY --from=builder --chown=nodejs:nodejs /app/prisma ./prisma

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT}/api/health || exit 1

# Security: Run everything after as non-privileged user
USER nodejs

# Use tini as entrypoint
ENTRYPOINT ["/sbin/tini", "--"]

# Start the application
CMD ["npm", "run", "start:prod"]

# Document that the container listens on port 3000
EXPOSE 3000

# Labels
LABEL maintainer="Algo360FX Team <team@algo360fx.com>" \
      version="1.0.0" \
      description="Algo360FX API Service" \
      org.opencontainers.image.source="https://github.com/algo360fx/algo360fx-api" \
      org.opencontainers.image.vendor="Algo360FX" \
      org.opencontainers.image.title="Algo360FX API" \
      org.opencontainers.image.description="API service for Algo360FX trading platform" \
      org.opencontainers.image.version="1.0.0" \
      org.opencontainers.image.created=${BUILD_DATE} \
      org.opencontainers.image.revision=${BUILD_REVISION} \
      org.opencontainers.image.licenses="MIT"
